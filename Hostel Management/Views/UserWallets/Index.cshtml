@model IEnumerable<Hostel_Management.Models.Model.UserWallet>
@using Hostel_Management.Models.Model

@{
    ViewData["Title"] = "My Wallets";
    Layout = "~/Views/Shared/_Layout.cshtml";

    // Calculate wallet summary statistics
    decimal totalPositive = 0;
    decimal totalNegative = 0;
    decimal netTotal = 0;

    foreach (var wallet in Model)
    {
        decimal walletNetAmount = 0;

        if (wallet.Transactions != null && wallet.Transactions.Any())
        {
            decimal creditAmount = wallet.Transactions
                .Where(t => t.TransactionType == TransactionType.Credit)
                .Sum(t => t.Amount);

            decimal debitAmount = wallet.Transactions
                .Where(t => t.TransactionType == TransactionType.Debit)
                .Sum(t => t.Amount);

            walletNetAmount = creditAmount - debitAmount;
        }

        if (walletNetAmount > 0)
        {
            totalPositive += walletNetAmount;
        }
        else if (walletNetAmount < 0)
        {
            totalNegative += Math.Abs(walletNetAmount);
        }

        netTotal += walletNetAmount;
    }
}

<div class="wallet-dashboard py-4">
    <div class="container">
        <!-- Page Header -->
        <div class="page-header d-flex justify-content-between align-items-center mb-4">
            <div>
                <h1 class="h3 mb-1 fw-bold text-primary">My Wallets</h1>
                <p class="text-muted mb-0">Select a wallet to view transactions</p>
            </div>
            <a asp-action="Create" class="btn btn-primary">
                <i class="fas fa-plus me-2"></i>New Wallet
            </a>
        </div>

        <!-- Wallet Summary Dashboard -->
        <div class="wallet-summary-dashboard mb-4 fade-in">
            <div class="row g-3">
                <div class="col-md-4">
                    <div class="card border-0 shadow-sm h-100 dashboard-card">
                        <div class="card-body">
                            <div class="d-flex justify-content-between align-items-center">
                                <div>
                                    <h6 class="text-muted fw-normal mb-1">Total Positive</h6>
                                    <h3 class="fw-bold text-success mb-0">
                                        + @totalPositive.ToString("N2")
                                    </h3>
                                </div>
                                <div class="icon-shape bg-light-success text-success rounded-circle">
                                    <i class="fas fa-plus"></i>
                                </div>
                            </div>
                            <div class="mt-3 mb-0 text-muted small">
                                <span>Total from wallets with positive balance</span>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="col-md-4">
                    <div class="card border-0 shadow-sm h-100 dashboard-card">
                        <div class="card-body">
                            <div class="d-flex justify-content-between align-items-center">
                                <div>
                                    <h6 class="text-muted fw-normal mb-1">Total Negative</h6>
                                    <h3 class="fw-bold text-danger mb-0">
                                        - @totalNegative.ToString("N2")
                                    </h3>
                                </div>
                                <div class="icon-shape bg-light-danger text-danger rounded-circle">
                                    <i class="fas fa-minus"></i>
                                </div>
                            </div>
                            <div class="mt-3 mb-0 text-muted small">
                                <span>Total from wallets with negative balance</span>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="col-md-4">
                    <div class="card border-0 shadow-sm h-100 dashboard-card">
                        <div class="card-body">
                            <div class="d-flex justify-content-between align-items-center">
                                <div>
                                    <h6 class="text-muted fw-normal mb-1">Net Balance</h6>
                                    @{
                                        var netClass = netTotal >= 0 ? "text-success" : "text-danger";
                                        var netPrefix = netTotal >= 0 ? "+" : "-";
                                        var netFormatted = Math.Abs(netTotal).ToString("N2");
                                    }
                                    <h3 class="fw-bold @netClass mb-0">
                                        @netPrefix @netFormatted
                                    </h3>
                                </div>
                                <div class="icon-shape bg-light-primary text-primary rounded-circle">
                                    <i class="fas fa-wallet"></i>
                                </div>
                            </div>
                            <div class="mt-3 mb-0 text-muted small">
                                <span>Net balance across all wallets</span>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <!-- Simple Search Box -->
        <div class="search-container card border-0 shadow-sm mb-4 fade-in">
            <div class="card-body p-3">
                <div class="input-group">
                    <span class="input-group-text bg-light border-end-0">
                        <i class="fas fa-search text-muted"></i>
                    </span>
                    <input type="text" class="form-control border-start-0" id="walletSearch" placeholder="Search wallets by name..." autocomplete="off">
                    <button class="btn btn-outline-secondary border-start-0 bg-white d-none" type="button" id="clearSearch">
                        <i class="fas fa-times"></i>
                    </button>
                </div>
            </div>
        </div>

        <!-- Results Summary -->
        <div class="d-flex justify-content-between align-items-center mb-3">
            <div class="results-info">
                <span class="badge bg-light-primary text-primary px-3 py-2 rounded-pill">
                    <i class="fas fa-wallet me-1"></i> <span id="walletCount">@Model.Count()</span> Wallets
                </span>
            </div>
        </div>

        <!-- Wallet Cards -->
        <div class="row g-4" id="walletGrid">
            @if (Model.Any())
            {
                @foreach (var wallet in Model)
                {
                    <!-- Calculate net amount using the enum values -->
                    // Calculate the net amount using the enum values
                    decimal netAmount = 0;

                    if (wallet.Transactions != null && wallet.Transactions.Any())
                    {
                        decimal creditAmount = wallet.Transactions
                        .Where(t => t.TransactionType == TransactionType.Credit)
                        .Sum(t => t.Amount);

                        decimal debitAmount = wallet.Transactions
                        .Where(t => t.TransactionType == TransactionType.Debit)
                        .Sum(t => t.Amount);

                        netAmount = creditAmount - debitAmount;
                    }

                    var isPositive = netAmount >= 0;
                    var formattedAmount = Math.Abs(netAmount).ToString("N2");


                    <div class="col-md-6 col-lg-4 wallet-item fade-in" data-name="@wallet.Name.ToLower()">
                        <div class="wallet-card card border-0 shadow-sm h-100">
                            <div class="card-body p-0">
                                <div class="wallet-card-header d-flex justify-content-between align-items-center p-3 border-bottom">
                                    <div class="d-flex align-items-center">
                                        <div class="wallet-icon-container bg-primary-subtle rounded-circle me-2">
                                            <i class="fas fa-wallet text-primary"></i>
                                        </div>
                                        <h3 class="card-title h6 fw-bold mb-0 text-truncate">@wallet.Name</h3>
                                    </div>
                                    <div class="dropdown">
                                        <button class="btn btn-sm btn-icon" type="button" id="dropdownMenu-@wallet.Id" data-bs-toggle="dropdown" aria-expanded="false">
                                            <i class="fas fa-ellipsis-vertical text-muted"></i>
                                        </button>
                                        <ul class="dropdown-menu dropdown-menu-end shadow-sm" aria-labelledby="dropdownMenu-@wallet.Id">
                                            <li>
                                                <a class="dropdown-item d-flex align-items-center" asp-action="Edit" asp-route-id="@wallet.Id">
                                                    <i class="fas fa-edit me-2 text-primary"></i> Edit
                                                </a>
                                            </li>
                                         
                                            <li><hr class="dropdown-divider"></li>
                                            <li>
                                                <a class="dropdown-item d-flex align-items-center text-danger" asp-action="Delete" asp-route-id="@wallet.Id">
                                                    <i class="fas fa-trash-alt me-2"></i> Delete
                                                </a>
                                            </li>
                                        </ul>
                                    </div>
                                </div>

                                <!-- Card Content -->
                                <div class="wallet-card-content p-3 card-clickable" data-url='@Url.Action("Index", "UserTransactions", new { id = wallet.Id })'>
                                    <!-- Balance Display -->
                                    <div class="wallet-balance mb-3">
                                        <div class="text-muted small mb-1">Current Balance</div>
                                        <div class="d-flex align-items-baseline">
                                            <h4 class="fw-bold @(isPositive ? "text-success" : "text-danger") mb-0">
                                                @(isPositive ? "+" : "-") @formattedAmount
                                            </h4>
                                            <span class="ms-2 text-muted small">@wallet.Currency.Code</span>
                                        </div>
                                    </div>

                                    <div class="d-flex justify-content-between align-items-center mb-3">
                                        <div class="badge bg-primary-subtle text-primary">
                                            <i class="fas fa-money-bill-wave me-1"></i> @wallet.Currency.Code
                                        </div>
                                        <div class="badge bg-success-subtle text-success">
                                            Active
                                        </div>
                                    </div>

                                    <div class="wallet-info">
                                        <div class="d-flex justify-content-between align-items-center">
                                            <span class="text-muted small">Created On</span>
                                            <span class="fw-medium">@wallet.Timestamp.ToString("dd MMM, yyyy")</span>
                                        </div>
                                    </div>
                                </div>

                                <!-- Card Footer -->
                                <div class="wallet-card-footer d-flex border-top">
                                    <a href="@Url.Action("Create", "UserTransactions", new { walletId = wallet.Id, createdType = "receive" })" class="flex-grow-1 btn btn-light border-end rounded-0 py-2">
                                        <i class="fas fa-arrow-down text-success me-1"></i> Cash In
                                    </a>
                                    <a href="@Url.Action("Create", "UserTransactions", new { walletId = wallet.Id, createdType = "send" })" class="flex-grow-1 btn btn-light rounded-0 py-2">
                                        <i class="fas fa-arrow-up text-danger me-1"></i> Cash Out
                                    </a>
                                </div>
                            </div>
                        </div>
                    </div>
                }
            }

            <div id="noWalletsMessage" class="col-12" style="display: none;">
                <div class="empty-state card border-0 shadow-sm text-center p-5">
                    <div class="empty-state-icon mb-3">
                        <i class="fas fa-search text-muted fa-3x"></i>
                    </div>
                    <h3 class="h5 mb-2">No Matching Wallets</h3>
                    <p class="text-muted mb-3">Try a different search term</p>
                    <button type="button" class="btn btn-outline-primary" id="clearFilters">
                        <i class="fas fa-times me-2"></i>Clear Search
                    </button>
                </div>
            </div>

            @if (!Model.Any())
            {
                <div class="col-12">
                    <div class="empty-state card border-0 shadow-sm text-center p-5">
                        <div class="empty-state-icon mb-3">
                            <i class="fas fa-wallet text-muted fa-3x"></i>
                        </div>
                        <h3 class="h5 mb-2">No Wallets Found</h3>
                        <p class="text-muted mb-3">You haven't created any wallets yet.</p>
                        <a asp-action="Create" class="btn btn-primary">
                            <i class="fas fa-plus me-2"></i>Create Your First Wallet
                        </a>
                    </div>
                </div>
            }
        </div>
    </div>
</div>

<!-- Scripts -->
<script>
    document.addEventListener("DOMContentLoaded", function () {
        // Card click functionality
        document.querySelectorAll(".card-clickable").forEach(function (card) {
            card.addEventListener("click", function (event) {
                if (!event.target.closest(".dropdown, button, a")) {
                    window.location.href = card.getAttribute("data-url");
                }
            });
        });

        // Search functionality
        const searchInput = document.getElementById('walletSearch');
        const clearSearch = document.getElementById('clearSearch');
        const walletItems = document.querySelectorAll('.wallet-item');
        const noWalletsMessage = document.getElementById('noWalletsMessage');
        const walletCount = document.getElementById('walletCount');
        const clearFilters = document.getElementById('clearFilters');

        // Live search as user types
        searchInput.addEventListener('input', function() {
            const searchTerm = this.value.toLowerCase().trim();
            filterWallets(searchTerm);

            // Show/hide clear button
            if (searchTerm.length > 0) {
                clearSearch.classList.remove('d-none');
            } else {
                clearSearch.classList.add('d-none');
            }
        });

        // Clear search button
        clearSearch.addEventListener('click', function() {
            searchInput.value = '';
            filterWallets('');
            this.classList.add('d-none');
            searchInput.focus();
        });

        // Clear filters from empty state
        clearFilters.addEventListener('click', function() {
            searchInput.value = '';
            filterWallets('');
            clearSearch.classList.add('d-none');
        });

        // Filter wallets function
        function filterWallets(searchTerm) {
            let visibleCount = 0;

            walletItems.forEach(item => {
                const itemName = item.getAttribute('data-name');

                if (searchTerm === '' || itemName.includes(searchTerm)) {
                    item.style.display = '';
                    visibleCount++;
                } else {
                    item.style.display = 'none';
                }
            });

            // Update wallet count
            walletCount.textContent = visibleCount;

            // Show/hide no wallets message
            noWalletsMessage.style.display = visibleCount === 0 ? 'block' : 'none';
        }

        // Add highlight to search box on focus
        searchInput.addEventListener('focus', function() {
            this.parentElement.parentElement.classList.add('search-focused');
        });

        searchInput.addEventListener('blur', function() {
            this.parentElement.parentElement.classList.remove('search-focused');
        });
    });
</script>

<style>
    /* Modern wallet dashboard styling */
    :root {
        --primary-color: #714B67;
        --primary-hover: #5D3E56;
        --success-color: #28a745;
        --danger-color: #dc3545;
        --info-color: #17a2b8;
        --light-success: #e6f7e9;
        --light-danger: #fbe7e9;
        --light-primary: #f0e8f0;
        --border-color: #e9ecef;
        --text-muted: #6c757d;
        --card-shadow: 0 2px 8px rgba(0,0,0,0.05);
    }

    body {
        font-family: 'Inter', 'Roboto', sans-serif;
        background-color: #f8f9fa;
        color: #212529;
    }

    /* Page header */
    .page-header h1 {
        color: var(--primary-color);
        font-weight: 600;
    }

    /* Wallet Summary Dashboard */
    .wallet-summary-dashboard {
        margin-bottom: 1.5rem;
    }

        .wallet-summary-dashboard .card {
            transition: all 0.3s ease;
        }

            .wallet-summary-dashboard .card:hover {
                transform: translateY(-5px);
                box-shadow: 0 8px 24px rgba(0,0,0,0.08);
            }

    .dashboard-card .icon-shape {
        width: 48px;
        height: 48px;
        display: flex;
        align-items: center;
        justify-content: center;
        border-radius: 50%;
        font-size: 1.25rem;
    }

    .bg-light-success {
        background-color: var(--light-success);
    }

    .bg-light-danger {
        background-color: var(--light-danger);
    }

    .bg-light-primary {
        background-color: var(--light-primary);
    }

    /* Card styling */
    .card {
        border-radius: 0.75rem;
        overflow: hidden;
        transition: transform 0.2s, box-shadow 0.2s;
    }

    .wallet-card {
        height: 100%;
    }

        .wallet-card:hover {
            transform: translateY(-3px);
            box-shadow: 0 8px 16px rgba(0,0,0,0.1) !important;
        }

    .wallet-card-content {
        cursor: pointer;
    }

    /* Balance styling */
    .wallet-balance {
        padding: 0.75rem;
        background-color: #f8f9fa;
        border-radius: 0.5rem;
        transition: all 0.2s ease;
    }

        .wallet-balance:hover {
            background-color: #f0f0f0;
        }

    .wallet-card-content:hover .wallet-balance {
        background-color: #f0f0f0;
    }

    /* Icon styling */
    .wallet-icon-container {
        width: 32px;
        height: 32px;
        display: flex;
        align-items: center;
        justify-content: center;
    }

    /* Button styling */
    .btn {
        font-weight: 500;
        border-radius: 0.5rem;
        padding: 0.5rem 1rem;
        transition: all 0.2s;
    }

    .btn-primary {
        background-color: var(--primary-color);
        border-color: var(--primary-color);
    }

        .btn-primary:hover {
            background-color: var(--primary-hover);
            border-color: var(--primary-hover);
        }

    .btn-icon {
        width: 32px;
        height: 32px;
        padding: 0;
        display: flex;
        align-items: center;
        justify-content: center;
        border-radius: 50%;
    }

        .btn-icon:hover {
            background-color: #f0f0f0;
        }

    .wallet-card-footer .btn {
        transition: background-color 0.2s;
    }

        .wallet-card-footer .btn:hover {
            background-color: #f0f0f0;
        }

    /* Badge styling */
    .badge {
        font-weight: 500;
        padding: 0.35em 0.65em;
        border-radius: 0.5rem;
    }

    .bg-primary-subtle {
        background-color: var(--light-primary);
    }

    .bg-success-subtle {
        background-color: var(--light-success);
    }

    .bg-danger-subtle {
        background-color: var(--light-danger);
    }

    .text-primary {
        color: var(--primary-color) !important;
    }

    .text-success {
        color: var(--success-color) !important;
    }

    .text-danger {
        color: var(--danger-color) !important;
    }

    /* Empty state styling */
    .empty-state {
        border-radius: 0.75rem;
    }

    .empty-state-icon {
        color: #dee2e6;
    }

    /* Search box styling */
    .search-container {
        border-radius: 0.75rem;
        transition: all 0.3s ease;
    }

        .search-container:hover {
            box-shadow: 0 5px 15px rgba(0,0,0,0.08) !important;
        }

    .search-focused {
        box-shadow: 0 0 0 0.25rem rgba(113, 75, 103, 0.15) !important;
    }

    .input-group-text {
        border-radius: 0.5rem 0 0 0.5rem;
        border-right: none;
    }

    .input-group .form-control {
        border-radius: 0;
        box-shadow: none !important;
        font-size: 1rem;
        padding: 0.6rem 1rem;
        border-left: none;
    }

        .input-group .form-control:focus {
            border-color: var(--border-color);
        }

    .input-group .btn {
        border-radius: 0 0.5rem 0.5rem 0;
        border-left: none;
    }

</style>